/* Generated By:JJTree: Do not edit this line. ASTCodeBlock.java Version 6.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
import java.util.*;

public class ASTCodeBlock extends SimpleNode {
  public ASTCodeBlock(int id) {
    super(id);
  }

  public ASTCodeBlock(JavaMMParser p, int id) {
    super(p, id);
  }

  public void fillGraph(HashMap<String, LiveNode> graph, List<LiveNode> activeList) {
    List<LiveNode> tmpList = new ArrayList<>(activeList);

    for (Node node : children) ((SimpleNode) node).fillGraph(graph, tmpList);

    //System.out.println("Active");
    //for(LiveNode node : activeList) System.out.println("\t" + node.varName);

    //System.out.println("Tmp");
    //for(LiveNode node : tmpList) System.out.println("\t" + node.varName);

    for(int i = activeList.size(); i < tmpList.size(); i++) {
      activeList.add(new LiveNode(tmpList.get(i).getRealNode()));
    }

  }

  //TODO fix this!
  //Can't "hide" everything inside ifs/codeBlocks
  //They must still be avaiable to create edges
  //But they must not act as a stopping point for the same var

}
/* JavaCC - OriginalChecksum=b0f0e137812f0ad50bb6753e9a02bdb3 (do not edit this line) */
