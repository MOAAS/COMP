/* Generated By:JJTree: Do not edit this line. ASTAccess.java Version 6.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
import java.util.HashMap;
public
class ASTAccess extends SimpleNode {
  public ASTAccess(int id) {
    super(id);
  }

  public ASTAccess(JavaMMParser p, int id) {
    super(p, id);
  }

  @Override
  public String getType() {
    return "int";
  }

  @Override
  public String generateCode() {
    return super.generateCode() + "iaload\n";
  }

  @Override
  public StackLimitValues calculateStackLimit(StackLimitValues slv){
    return super.calculateStackLimit(slv).decStack(1);
  }

  @Override
  public boolean isSemanticallyCorrect(HashMap<String, Integer> varInitTable) {
    if(!super.isSemanticallyCorrect(varInitTable))
      return false;
    Node[] children = this.jjtGetChildren();
    Node arrayNode = children[0];
    Node indexNode = children[1];

    if(!arrayNode.getType().equals("int[]")){
      System.err.println("Error: Array must be of type int[]. Found: " + arrayNode.getType() + " at line " + ((SimpleNode)indexNode).line + ", column " + ((SimpleNode)indexNode).column + ".");
      return false;
    }
    if(!indexNode.getType().equals("int")){
      System.err.println("Error: Array index is not an int. Found: " + indexNode.getType() + " at line " + ((SimpleNode)indexNode).line + ", column " + ((SimpleNode)indexNode).column + ".");
      return false;
    }
    return true;
  }

}
/* JavaCC - OriginalChecksum=31d16cf03b55f74dc0eb1e980a9b66dd (do not edit this line) */
