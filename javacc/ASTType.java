/* Generated By:JJTree: Do not edit this line. ASTType.java Version 6.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public
class ASTType extends SimpleNode {
  public boolean array=false;
  public ASTType(int id) {
    super(id);
  }

  public ASTType(JavaMMParser p, int id) {
    super(p, id);
  }

  @Override
  public String toString() {
    return this.value.toString() + (array ? "[]" : "");
  }

  public static String generateCodeChar(Node node) {
    switch (node.getClass().getName()) {
      case "ASTType": return generateCodeChar(node.toString());
      case "ASTIdentifier": return "L" + ((SimpleNode)node).value + ";";
      default: System.out.println("Error generating code char: Node class -> " + node.getClass().getName()); return "";
    }
  }

  public static String generateCodeChar(String type) {
    switch (type) {
      case "int": return "I";
      case "int[]": return "[I";
      case "boolean": return "Z";
      case "void": return "V";
      default: return "L" + type + ";";
    }
  }
}
/* JavaCC - OriginalChecksum=4c8c177aae9b6d7739cbed0bd31e0572 (do not edit this line) */
