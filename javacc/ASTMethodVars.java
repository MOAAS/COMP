/* Generated By:JJTree: Do not edit this line. ASTMethodVars.java Version 6.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
import java.util.HashMap;
import java.util.List;

public
class ASTMethodVars extends SimpleNode {
  public ASTMethodVars(int id) {
    super(id);
  }

  public ASTMethodVars(JavaMMParser p, int id) {
    super(p, id);
  }

  @Override
  public boolean explore(int order, SymbolTable parentTable) {
    this.setSymbolTable(parentTable);
    Node[] nodes = this.jjtGetChildren();

    boolean success = true;
    for(int i = 0; i < nodes.length; i++) {
      if(!((ASTMethodVar)nodes[i]).explore(i + 1, parentTable)) success = false;
    }

    return success;
  }

  public void fillGraph(HashMap<String, LiveNode> graph, List<LiveNode> activeList) {
    for(Node node : this.children) {
      ((SimpleNode) node).fillGraph(graph, activeList);
    }
  }
}
/* JavaCC - OriginalChecksum=46bf9852c5959b6042b7af31d9d1d2b2 (do not edit this line) */
