/* Generated By:JJTree: Do not edit this line. ASTThis.java Version 6.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
import java.util.HashMap;
import java.util.List;

public
class ASTThis extends SimpleNode {
  public ASTThis(int id) {
    super(id);
  }

  public ASTThis(JavaMMParser p, int id) {
    super(p, id);
  }

  @Override
  public String getType() {
    return this.symbolTable.getClassName();
  }

  @Override
  public String generateCode() {
    return "aload_0\n";
  }

  @Override
  public StackLimitValues calculateStackLimit(StackLimitValues slv){
    return slv.incStack(1);
  }

  @Override
  public boolean isSemanticallyCorrect(HashMap<String, Integer> varInitTable) {
    if(this.getSymbolTable().getRoot() instanceof ASTMainDeclaration) {
      System.err.println("Error: Cannot use \"this\" in static function at line " + this.line + ", column " + this.column + ".");
      return false;
    }
    return true;
  }

  public void fillGraph(HashMap<String, LiveNode> graph, List<LiveNode> activeList) {
    LiveNode self = graph.get("this");
    if(self == null) {
      self = new LiveNode("this", 0);
      graph.put("this", self);
    }

    for(int i = activeList.size() - 1; i >= 0; i--) {
      LiveNode node = activeList.get(i);
      if(node.equals(self)) break;
      self.createEdge(node);
    }

    activeList.add(self);
  }
}
/* JavaCC - OriginalChecksum=8c0f5071d25ad4f2247b83ea720a447c (do not edit this line) */
