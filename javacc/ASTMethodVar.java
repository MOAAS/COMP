/* Generated By:JJTree: Do not edit this line. ASTMethodVar.java Version 6.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
import java.util.HashMap;
import java.util.List;

public
class ASTMethodVar extends SimpleNode {
  public ASTMethodVar(int id) {
    super(id);
  }

  public ASTMethodVar(JavaMMParser p, int id) {
    super(p, id);
  }

  private int paramOrder;

  @Override
  public String generateCode() {
    return ASTType.generateCodeChar(this.children[0]);
  }

  @Override
  public boolean explore(int order, SymbolTable parentTable) {
    super.explore(order, parentTable);

    SimpleNode nameNode = (SimpleNode) this.jjtGetChild(1);
    String varType = this.jjtGetChild(0).toString();
    String varName = this.jjtGetChild(1).toString();

    if(parentTable.checkIfSymbolExists(varName)) {
      System.err.println("Error: Duplicate method variable name \"" + varName + "\" at line " + nameNode.line + ", column " + nameNode.column + ".");
      return false;
    }

    VarSymbol varSymbol = new VarSymbol(varType, order);
    parentTable.put(varName, varSymbol);

    paramOrder = order;
    return true;
  }

  public void fillGraph(HashMap<String, LiveNode> graph, List<LiveNode> activeList) {
    String name = this.children[1].toString();
    LiveNode node = new LiveNode(name, paramOrder);

    graph.put(name, node);
    activeList.add(node);
  }
}
/* JavaCC - OriginalChecksum=4176a2aa58c7064724877764b4894f8d (do not edit this line) */
